<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Voxi Chat Bot</title>
   <style>
    *{
        box-sizing: border-box;
    }
        body {
            font-family: Arial, sans-serif;
            background-color: #292929; /* Dark background color */
            color: #fff; /* Light text color */
            margin: 0;
            padding: 0;
        }

        .chat-container {
            max-width: 500px;
            margin: 50px auto;
            border: 1px solid #555; /* Darker border color */
            border-radius: 10px;
            overflow: hidden;
            background-color: #2c2c2c; /* Darker chat container background */
        }

        .chat-bubble {
            background-color: #363636; /* Darker chat bubble background */
            padding: 10px 15px;
            margin: 10px;
            border-radius: 10px;
            clear: both;
            max-width: 70%;
        }

        .user-bubble {
            float: right;
        }

        .bot-bubble {
            float: left;
        }

        .sentiment-indicator {
            font-size: 12px;
            color: #999;
        }

        .sent-tag {
            font-size: 10px;
            color: #777;
            text-transform: uppercase;
            margin-right: 5px;
        }

        .sent-message {
            display: inline-block;
            background-color: #0088cc; /* Lighter blue for sent message */
            color: #fff;
            padding: 2px 6px;
            border-radius: 4px;
            font-size: 12px;
        }

        .positive {
            color: #00c853;
        }

        .negative {
            color: #f44336;
        }

        /* Additional styles for the input and send button */
        .user-input {
            display: flex;
            align-items: center;
            padding: 10px;
            background-color: #2c2c2c; /* Darker input container background */
            position: fixed;
            bottom: 0;
            width: 100%;
      
        }

        .user-message {
            flex: 1;
            padding: 10px;
            border: none; /* Remove border to improve the appearance */
            border-radius: 20px; /* Increase border radius for a more rounded look */
            margin-right: 10px;
            background-color: #444; /* Darker input background */
            color: #fff; /* Light text color */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Add a subtle box shadow */
        }

        .user-message::placeholder {
            color: #aaa; /* Lighter placeholder color */
        }

        .user-message:focus {
            outline: none; /* Remove the default focus outline */
            box-shadow: 0 0 8px rgba(0, 136, 204, 0.8); /* Add a blue glow on focus */
        }

        .send-button {
            background-color: #0088cc; /* Lighter blue for send button */
            color: #fff; /* Light text color */
            border: none;
            padding: 8px 16px;
            border-radius: 20px; /* Increase border radius for a more rounded look */
            cursor: pointer;
            transition: background-color 0.3s ease; /* Add a smooth color transition on hover */
        }

        .send-button:hover {
            background-color: #0077b3; /* Slightly darker blue on hover */
        }

        @media screen and (max-width: 600px) {
            .chat-container {
                margin: 20px auto;
            }

            .chat-bubble {
                max-width: 90%;
            }

            .user-message,
            .send-button {
                padding: 8px;
                font-size: 14px;
            }
        }
    </style>
</head>

<body>
   
    <div class="bot-title" style="padding: 15px;" >
        <h1 style="text-align: center;">Voxi</h1>
        <p style="text-align: center;">A Sentiment Analysis, Natural Language Processing Intent Based Conversational AI</p>

        <p style="color: red;text-align: center;">Voxi Might Produce Incorrect and Irrelevent Responses as it is Still in Traininig</p>
    </div>

  <div class="chat-container">

    
    <div class="chat-bubble bot-bubble">
      <span class="sentiment-indicator positive">Positive</span>
      <p>Hello! I'm Voxi, your friendly chatbot. How can I assist you today?</p>
    </div>
   
   
  </div>
   <div class="user-input">
        <input type="text" id="user-message" class="user-message" placeholder="Type your message here...">
        <button class="send-button" onclick="sendMessage()">Send</button>
    </div>
</body>

</html>

<script>

     function addChatBubble(sender, message, sentiment) {
            const chatContainer = document.querySelector(".chat-container");
            const chatBubble = document.createElement("div");
            chatBubble.classList.add("chat-bubble");
            chatBubble.classList.add(sender === "user" ? "user-bubble" : "bot-bubble");

            const sentimentIndicator = document.createElement("span");
            sentimentIndicator.classList.add("sentiment-indicator");
            sentimentIndicator.classList.add(sentiment ? "negative" : "positive");
            sentimentIndicator.innerText = sentiment ? "Negative" : "Positive";

            const messageContent = document.createElement("p");
            messageContent.innerHTML = `${sender === "user" ? '<span class ="sent-tag">Sent:</span>' : ""}`+ message;

            chatBubble.appendChild(sentimentIndicator);
            chatBubble.appendChild(messageContent);
            chatContainer.appendChild(chatBubble);
            window.scrollTop = chatContainer.scrollHeight;
           
        }

    const sendMessage = async ()=>{

       
        const message = document.getElementById("user-message")

        const response = await fetch("/message/new", {
            method:"POST",
            headers:{
                "content-type":"application/json"
            },
            body: JSON.stringify({message:message.value})
        })


        const data = await response.json()

        // Add user message
        addChatBubble(data.userMessage.sender, data.userMessage.message, data.userMessage.negative);

        // Add bot message
        addChatBubble(data.botMessage.sender, data.botMessage.message, data.botMessage.negative);
        document.getElementById("user-message").value = ""


    }


    window.addEventListener("keypress",(e)=>{
        if(e.key === "Enter"){
            sendMessage()
        }
    })


    const getMessages = async ()=>{

          const response = await fetch("/messages", {
            method:"GET",
            headers:{
                "content-type":"application/json"
            }
        })


        const data = await response.json()

        data.messages.forEach(x => {

            addChatBubble(x.sender, x.message, x.negative);
            
        });

        console.log(data)
        console.log(data.messages.flatMap(x=> x.message))

    }

    getMessages()

</script>
